name: Build and Save Docker Image

on:
  workflow_dispatch:
    inputs:
      version_tag:
        description: 'Version tag for the image (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-save:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "VERSION=${{ github.event.inputs.version_tag }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        echo "SHORT_SHA=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
        echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          renatofama/famachat
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=${{ steps.version.outputs.VERSION }}
          type=raw,value={{date 'YYYY.MM.DD'}}-${{ steps.version.outputs.SHORT_SHA }}
        labels: |
          org.opencontainers.image.title=FamaChat
          org.opencontainers.image.description=Sistema de gestÃ£o imobiliÃ¡ria para o mercado brasileiro
          org.opencontainers.image.version=${{ steps.version.outputs.VERSION }}
          org.opencontainers.image.created=${{ steps.version.outputs.BUILD_DATE }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.licenses=Proprietary
    
    - name: Build and push to registries
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64
        build-args: |
          VERSION=${{ steps.version.outputs.VERSION }}
          BUILD_DATE=${{ steps.version.outputs.BUILD_DATE }}
          COMMIT_SHA=${{ github.sha }}
    
    - name: Generate image summary
      run: |
        echo "## Docker Image Built Successfully! ðŸš€" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Image Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Version:** ${{ steps.version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Date:** ${{ steps.version.outputs.BUILD_DATE }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Size:** $(docker image inspect ghcr.io/${{ github.repository }}:latest --format='{{.Size}}' | numfmt --to=iec)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Available Tags" >> $GITHUB_STEP_SUMMARY
        echo "```" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo "```" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Deployment Commands" >> $GITHUB_STEP_SUMMARY
        echo "```bash" >> $GITHUB_STEP_SUMMARY
        echo "# Pull the image" >> $GITHUB_STEP_SUMMARY
        echo "docker pull renatofama/famachat:${{ steps.version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Deploy with Docker Compose" >> $GITHUB_STEP_SUMMARY
        echo "docker stack deploy -c famachat.yml famachat" >> $GITHUB_STEP_SUMMARY
        echo "```" >> $GITHUB_STEP_SUMMARY
    
    - name: Create release
      if: github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: FamaChat ${{ steps.version.outputs.VERSION }}
        body: |
          ## FamaChat ${{ steps.version.outputs.VERSION }}
          
          ### Docker Images
          - `renatofama/famachat:${{ steps.version.outputs.VERSION }}`
          - `ghcr.io/${{ github.repository }}:${{ steps.version.outputs.VERSION }}`
          
          ### Deployment
          ```bash
          docker pull renatofama/famachat:${{ steps.version.outputs.VERSION }}
          docker stack deploy -c famachat.yml famachat
          ```
          
          ### Changes
          Built from commit: ${{ github.sha }}
        draft: false
        prerelease: false